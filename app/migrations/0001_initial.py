# Generated by Django 5.0.1 on 2024-02-24 20:44

import app.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserClients',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(default=' ', max_length=30, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('usage', models.IntegerField(default=480)),
                ('number_phone', models.CharField(max_length=255)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('rate_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('star_rating', models.IntegerField(choices=[(1, '1 star'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')])),
                ('review_text', models.TextField()),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecordUser',
            fields=[
                ('record_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('summary_text', models.TextField(default=' ')),
                ('time_used', models.IntegerField(default=0)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecordSpeechText',
            fields=[
                ('record_s2t_id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('audio', models.BinaryField(blank=True, null=True)),
                ('duration', models.IntegerField(default=0)),
                ('lang', models.TextField()),
                ('text_english', models.TextField()),
                ('text_translate', models.TextField()),
                ('record_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.recorduser')),
            ],
        ),
        migrations.CreateModel(
            name='UserConsent',
            fields=[
                ('consent_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('consent_granted', models.BooleanField()),
                ('consent_timestamp', models.DateTimeField()),
                ('policy_version', models.CharField(max_length=255)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
